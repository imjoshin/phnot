#! /usr/local/bin/python3
import subprocess
import time
import signal
import conf
import auth
from notification_manager import NotificationManager
from console_manager import ConsoleManager
from phab_mail import PhabMail
from entities import Diff, Task
from colors import Colors

def main():
    email = auth.MAIL_USER + "+phnot" + conf.MAIL_DOMAIN

    mail = PhabMail(email, auth.MAIL_PASS, conf.MAIL_DIFF_LABEL, conf.MAIL_TASK_LABEL)
    mail.connect()

    diff_ids = []
    task_ids = []

    console = ConsoleManager()
    manager = NotificationManager(mail, console)

    while True:
        try:
            diffs = console.get_diffs()
            tasks = console.get_tasks()
            console.update_view(diffs, tasks)

            diff_ids = diff_ids + [diff.id for diff in diffs if diff.id not in diff_ids]
            task_ids = task_ids + [task.id for task in tasks if task.id not in task_ids]

            diff_notifications = mail.get_diff_notifications(diff_ids)
            task_notifications = mail.get_task_notifications(diff_ids)
            all_notifications = diff_notifications + task_notifications

            for n in all_notifications:
                manager.post_notification(n)

        except Exception as e:
            print(str(e))

        time.sleep(1)

def signal_handler(sig, frame):
    exit(0)

if __name__ == "__main__":
    signal.signal(signal.SIGINT, signal_handler)
    main()
